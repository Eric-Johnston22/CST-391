{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import { Track } from '../models/Track';\nexport class MusicServiceService {\n  constructor(http) {\n    this.http = http;\n    this.host = \"http://localhost:5000\";\n  }\n  getArtists(callback) {\n    this.http.get(this.host + \"/artists\").subscribe(artists => {\n      callback(artists);\n    });\n  }\n  getAlbums(artistName, callback) {\n    let request = this.host + `/albums/${artistName}`;\n    console.log('request', request);\n    this.http.get(request).subscribe(albums => {\n      console.log('have albums', albums);\n      callback(albums);\n    });\n  }\n  createAlbum(album, callback) {\n    this.http.post(this.host + \"/albums\", album).subscribe(data => {\n      callback();\n    });\n  }\n  updateAlbum(album, callback) {\n    this.http.put(this.host + \"/albums\", album).subscribe(data => {\n      callback();\n    });\n  }\n  deleteAlbum(id, callback) {\n    this.http.delete(this.host + \"/albums/\" + id).subscribe(data => {\n      callback();\n    });\n  }\n}\nMusicServiceService.ɵfac = function MusicServiceService_Factory(t) {\n  return new (t || MusicServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nMusicServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MusicServiceService,\n  factory: MusicServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MusicServiceService","constructor","http","host","getArtists","callback","get","subscribe","artists","getAlbums","artistName","request","console","log","albums","createAlbum","album","post","data","updateAlbum","put","deleteAlbum","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Coding\\GCU\\CST-391\\week4\\musicapp\\src\\app\\service\\music-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport exampledata from '../../data/sample-music-data.json';\nimport { HttpClient } from '@angular/common/http';\nimport { Album } from '../models/Album';\nimport { Artist } from '../models/Artist';\n//import { Track } from '../models/Track';\n\n@Injectable({ providedIn: 'root' })\nexport class MusicServiceService {\n\n  private host = \"http://localhost:5000\"\n \n\n  constructor(private http: HttpClient) {\n\n  }\n \n\n\n  public getArtists(callback: (artists: Artist[]) => void): void {\n    this.http.get<Artist[]>(this.host + \"/artists\").subscribe((artists: Artist[]) => {\n      callback(artists);\n    });\n  }\n\n\n  public getAlbums(artistName: string, callback:(albums: Album[]) => void): void {\n    let request = this.host + `/albums/${artistName}`;\n    console.log('request', request);\n    this.http.get<Album[]>(request).subscribe((albums: Album[]) => {\n      console.log('have albums', albums);\n      callback(albums);\n    });\n  }\n\n  public createAlbum(album: Album, callback: () => void): void {\n    this.http.post<Album>(this.host + \"/albums\", album).subscribe((data) => {\n      callback();\n    });\n  }\n\n  public updateAlbum(album: Album, callback: () => void): void {\n    this.http.put<Album>(this.host + \"/albums\", album).subscribe((data) => {\n      callback();\n    });\n  }\n\n  public deleteAlbum(id: number, callback: () => void ): void {\n    this.http.delete(this.host + \"/albums/\" + id).subscribe((data) => {\n      callback();\n    });\n  }\n}\n"],"mappings":";;AAMA;AAGA,OAAM,MAAOA,mBAAmB;EAK9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,IAAI,GAAG,uBAAuB;EAKtC;EAIOC,UAAUA,CAACC,QAAqC;IACrD,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACH,IAAI,GAAG,UAAU,CAAC,CAACI,SAAS,CAAEC,OAAiB,IAAI;MAC9EH,QAAQ,CAACG,OAAO,CAAC;IACnB,CAAC,CAAC;EACJ;EAGOC,SAASA,CAACC,UAAkB,EAAEL,QAAkC;IACrE,IAAIM,OAAO,GAAG,IAAI,CAACR,IAAI,GAAG,WAAWO,UAAU,EAAE;IACjDE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;IAC/B,IAAI,CAACT,IAAI,CAACI,GAAG,CAAUK,OAAO,CAAC,CAACJ,SAAS,CAAEO,MAAe,IAAI;MAC5DF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,MAAM,CAAC;MAClCT,QAAQ,CAACS,MAAM,CAAC;IAClB,CAAC,CAAC;EACJ;EAEOC,WAAWA,CAACC,KAAY,EAAEX,QAAoB;IACnD,IAAI,CAACH,IAAI,CAACe,IAAI,CAAQ,IAAI,CAACd,IAAI,GAAG,SAAS,EAAEa,KAAK,CAAC,CAACT,SAAS,CAAEW,IAAI,IAAI;MACrEb,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEOc,WAAWA,CAACH,KAAY,EAAEX,QAAoB;IACnD,IAAI,CAACH,IAAI,CAACkB,GAAG,CAAQ,IAAI,CAACjB,IAAI,GAAG,SAAS,EAAEa,KAAK,CAAC,CAACT,SAAS,CAAEW,IAAI,IAAI;MACpEb,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEOgB,WAAWA,CAACC,EAAU,EAAEjB,QAAoB;IACjD,IAAI,CAACH,IAAI,CAACqB,MAAM,CAAC,IAAI,CAACpB,IAAI,GAAG,UAAU,GAAGmB,EAAE,CAAC,CAACf,SAAS,CAAEW,IAAI,IAAI;MAC/Db,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;;AA3CWL,mBAAmB,C;mBAAnBA,mBAAmB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnB3B,mBAAmB,C;SAAnBA,mBAAmB;EAAA4B,OAAA,EAAnB5B,mBAAmB,CAAA6B,IAAA;EAAAC,UAAA,EADN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}