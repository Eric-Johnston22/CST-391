{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/music-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../list-albums/list-albums.component\";\nfunction ListArtistsComponent_div_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ListArtistsComponent_div_2_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const artist_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onSelectArtist(artist_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const artist_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", artist_r3.Name, \" \");\n  }\n}\nfunction ListArtistsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ListArtistsComponent_div_2_button_1_Template, 2, 1, \"button\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.artists);\n  }\n}\nfunction ListArtistsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-list-albums\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"artist\", ctx_r1.selectedArtist);\n  }\n}\nexport class ListArtistsComponent {\n  constructor(route, service) {\n    this.route = route;\n    this.service = service;\n    this.selectedArtist = null;\n    this.artists = [];\n  }\n  ngOnInit() {\n    console.log(\"Getting data ....\");\n    this.service.getArtists(artists => {\n      this.artists = artists;\n      console.log('this.artists', this.artists);\n      for (let i = 0; i < artists.length; i++) {\n        this.artists[i].Name = String(Object.values(artists[i]));\n      }\n    });\n  }\n  onSelectArtist(artist) {\n    this.selectedArtist = artist;\n    console.log('selected artist', artist);\n  }\n}\nListArtistsComponent.ɵfac = function ListArtistsComponent_Factory(t) {\n  return new (t || ListArtistsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MusicServiceService));\n};\nListArtistsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListArtistsComponent,\n  selectors: [[\"app-list-artists\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"list-group\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", \"active\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"active\", \"\", 1, \"list-group-item\", 3, \"click\"], [3, \"artist\"]],\n  template: function ListArtistsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"list-artists works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListArtistsComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵtemplate(3, ListArtistsComponent_div_3_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedArtist == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedArtist);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ListAlbumsComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","ListArtistsComponent_div_2_button_1_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r5","artist_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","onSelectArtist","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","Name","ɵɵtemplate","ListArtistsComponent_div_2_button_1_Template","ɵɵproperty","ctx_r0","artists","ɵɵelement","ctx_r1","selectedArtist","ListArtistsComponent","constructor","route","service","ngOnInit","console","log","getArtists","i","length","String","Object","values","artist","ɵɵdirectiveInject","i1","ActivatedRoute","i2","MusicServiceService","selectors","decls","vars","consts","template","ListArtistsComponent_Template","rf","ctx","ListArtistsComponent_div_2_Template","ListArtistsComponent_div_3_Template"],"sources":["C:\\Coding\\GCU\\CST-391\\week4\\musicapp\\src\\app\\list-artists\\list-artists.component.ts","C:\\Coding\\GCU\\CST-391\\week4\\musicapp\\src\\app\\list-artists\\list-artists.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Artist } from '../models/Artist';\nimport { MusicServiceService } from '../service/music-service.service';\n\n@Component({\n  selector: 'app-list-artists',\n  templateUrl: './list-artists.component.html',\n  styleUrls: ['./list-artists.component.css']\n})\nexport class ListArtistsComponent {\n  selectedArtist: Artist | null = null;\n  artists: Artist[] = [];\n  constructor(private route: ActivatedRoute, private service: MusicServiceService) { }\n\n  ngOnInit() {\n    console.log(\"Getting data ....\");\n    this.service.getArtists((artists: Artist[]) => {\n      this.artists = artists;\n      console.log('this.artists', this.artists);\n      for (let i = 0; i < artists.length; i++) {\n        this.artists[i].Name = String(Object.values(artists[i]));\n      }\n    });\n  }\n\n  onSelectArtist(artist: Artist) {\n\n    this.selectedArtist = artist;\n    console.log('selected artist', artist);\n  }\n}\n\n\n\n\n","<p>list-artists works!</p>\n<div class=\"list-group\" *ngIf=\"selectedArtist == null\">\n    <button class=\"list-group-item\" active *ngFor=\"let artist of artists\" (click)=\"onSelectArtist(artist)\">\n        {{ artist.Name}}\n    </button>\n</div>\n\n<div *ngIf=\"selectedArtist\">\n    <app-list-albums [artist]=\"selectedArtist\"></app-list-albums>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}